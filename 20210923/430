"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Node') -> 'Node':
        if head == None:
            return head
        
        dummy = Node(-1, None, None, None)

        pre = dummy
        stk = collections.deque()
        stk.append(head)
        while stk:
            x = stk.pop()

            pre.next = x
            x.prev = pre

            if x.next:
                stk.append(x.next)
            if x.child:
                stk.append(x.child)
                x.child = None
            
            pre = x
            
        dummy.next.prev = None
        return dummy.next